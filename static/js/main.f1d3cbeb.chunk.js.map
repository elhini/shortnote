{"version":3,"sources":["utils/AsyncUtils.ts","config/client.js","api-clients/base.ts","api-clients/users.js","utils/LocalStorage.js","utils/AuthUtils.js","pages/Landing/Landing.tsx","pages/Registration/Registration.tsx","pages/Login/Login.tsx","api-clients/notes.js","api-clients/settings.js","utils/StringUtils.js","components/Filters/Filters.tsx","components/Sort/Sort.tsx","components/TextEditor/TextEditor.tsx","components/Form/Form.tsx","utils/DateUtils.js","components/List/List.tsx","components/Alert/Alert.tsx","components/ReadonlyNote/ReadonlyNote.tsx","pages/Notes/Notes.tsx","api-clients/sessions.js","components/Users/Users.tsx","components/Settings/Settings.tsx","pages/Admin/Admin.tsx","AppRouter.js","serviceWorker.js","index.js"],"names":["AsyncUtils","url","method","params","callback","body","JSON","stringify","fetch","headers","Accept","Content-Type","credentials","then","res","errorStr","status","statusText","json","error","catch","console","client","apiHost","BaseApiClient","collection","component","Object","classCallCheck","this","host","window","location","hostname","some","h","includes","config","urlPostfix","item","cb","_this","field","getWaitingStateField","setState","defineProperty","sendJSON","handleRes","alert","handleReq","id","_id","UsersApiClient","possibleConstructorReturn","getPrototypeOf","call","login","password","ticket","LocalStorage","key","value","localStorage","setItem","getItem","AuthUtils","session","getSession","expireDate","Date","toISOString","parse","get","set","isLoggedIn","isAdmin","Landing","react_default","a","createElement","React","Component","Registration","state","redirectToReferrer","submitting","register","e","preventDefault","assertThisInitialized","loggedAs","setSession","target","_this2","from","props","pathname","react_router","to","className","type","name","onChange","onInputChange","Button","variant","onClick","disabled","Login","isLoginPage","NotesApiClient","SettingsApiClient","StringUtils","text","string","toLowerCase","Filters","filters","onFiltersChange","react_select_browser_esm","tags","isMulti","options","v","Sort","sort","fieldOptions","map","o","directionOptions","onSortChange","direction","TextEditor","RichTextEditor","createValueFromString","toString","react_rte_default","Form","titleInput","publicLinkInput","focus","select","document","execCommand","onPublicLinkCopy","err","publicLink","origin","publicLinkCont","Fragment","readOnly","ref","i","IconButton","title","copyPublicLink","FileCopy_default","onSubmit","onItemChange","autoFocus","htmlFor","checked","publicAccess","TextEditor_TextEditor","dist_react_select_browser_esm","onCreateOption","onCreateTag","submitEnabled","sending","changed","DateUtils","date","replace","substr","List","onDelete","bind","stopPropagation","onDeleteItem","html","DOMParser","parseFromString","textContent","nodes","items","opened","tag","data-id","label","aside","toStr","dateOfCreate","dateOfUpdate","confirm","Delete_default","react_router_dom","strip","length","loading","buildNodes","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","useStyles","makeStyles","theme","backgroundColor","green","palette","dark","primary","main","amber","icon","fontSize","iconVariant","opacity","marginRight","spacing","message","display","alignItems","AlertContent","classes","onClose","other","objectWithoutProperties","Icon","SnackbarContent","assign","clsx","aria-describedby","action","aria-label","color","Close_default","Alert","_React$useState","useState","_React$useState2","slicedToArray","open","setOpen","handleClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","ReadonlyNote","dangerouslySetInnerHTML","__html","Notes","accessLevels","history","stopListeningHistory","notesApiClient","autosaveTimeoutID","match","buildEmptyItem","formChanged","publicLinkCopied","formManualSubmitEnabled","listen","getItemByLocation","onOpenNew","onItemChangePartially","split","getItemIDFromLocation","getPublicItemIDFromLocation","find","publicID","getPublic","_this3","Promise","resolve","reject","getAll","settings","setting","notesFormManualSubmitEnabled","_this4","isPublicItemLocation","all","loadSettings","loadItems","emptyItem","_this5","arguments","undefined","updateItem","createItem","create","update","obj1","obj2","item1","item2","isObjectsEqual","isNew","_this6","objectSpread","isChanged","isItemsDiffer","filter","push","clearTimeout","setTimeout","_this7","remove","openedItem","newFilters","newSort","_this8","useTextFilter","matchByText","isContains","filterTagIDs","t","itemTagIDs","useTagsFilter","matchByTags","itemTagID","sign","i1","i2","v1","v2","reduce","concat","tagName","maxID","Math","max","apply","slice","_this9","ReadonlyNote_ReadonlyNote_ReadonlyNote","AddCircle_default","renderBody","filteredItems","filterAndSortItems","buildTagList","form","Form_Form_Form","Filters_Filters_Filters","Sort_Sort_Sort","List_List_List","SessionsApiClient","getSessionsPromise","cmp","sessions","Users","usersAPIClient","users","sessionsByUser","updatingUserID","promises","result","_","groupBy","s","userID","user","blocked","u","onControlClick","blockBtn","renderActionBtn","Block_default","unblockBtn","deleteBtn","userSessions","activeSessions","active","TableRow","TableCell","scope","registrationDate","Check_default","renderActionBtns","sortBy","CircularProgress","Table","TableHead","TableBody","renderTableRow","Settings","FormControl","FormLabel","FormGroup","FormControlLabel","control","Checkbox","handleCheck","TabPanel","children","activeTabID","tabID","Admin","currTabID","setCurrTabID","tabComponents","Users_Users_Users","Settings_Settings_Settings","tabIDs","keys","tabs","Tab","tabPanels","Tabs","event","newTabID","AdminRoute","_ref","rest","render","PrivateRoute","_ref2","Head","logout","isNotLoggedIn","private","isNotAdmin","admin","exact","logoutLabel","logoutLink","getNavLink","loginLink","getAuthState","AppRouter","HeadWithRouter","withRouter","path","Boolean","ReactDOM","AppRouter_AppRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f1d3cbeb.chunk.js","sourcesContent":["export default class AsyncUtils {\n    static sendJSON(url: string, method: string, params: any, callback: (res: any) => any) {\n        var body = params ? JSON.stringify(params) : null;\n        fetch(url, {\n            method: method,\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            },\n            credentials: \"include\", // to enable cookies: stackoverflow.com/questions/34558264\n            body: body\n        })\n        .then(res => {\n            var errorStr = \n                'status: ' + res.status + ', ' + \n                'statusText: ' + res.statusText + ', ' + \n                'url: ' + res.url;\n            return res.status === 200 ? res.json() : {error: errorStr};\n        })\n        .then(res => callback(res))\n        .catch(error => console.error('Error:', error));\n    }\n} ","export default {\n    apiHost: 'https://shortnote.herokuapp.com'\n}","import AsyncUtils from '../utils/AsyncUtils';\nimport config from '../config/client';\n\ntype Callback = (res: any) => void;\n\nexport default class BaseApiClient {\n    private url: string;\n\n    constructor(public collection: string, public component: React.Component) {\n        var host = window.location.hostname;\n        var allowedHosts = ['now.sh', 'github.io'];\n        var isPublicHost = allowedHosts.some(h => host.includes(h) && host.includes('elhini'));\n        var apiHost = isPublicHost ? config.apiHost : '';\n        this.url = apiHost + '/api/' + collection;\n    }\n\n    getWaitingStateField(method: string): string {\n        return method === 'GET' ? 'loading' : 'submitting';\n    }\n\n    handleReq(method: string, urlPostfix: string, item: any, cb: Callback){\n        if (this.component){ \n            var field = this.getWaitingStateField(method);\n            this.component.setState({ error: '', [field]: true });\n        }\n        AsyncUtils.sendJSON(this.url + urlPostfix, method, item, (res) => {\n            this.handleRes(cb, res, method);\n        });\n    }\n\n    handleRes(cb: Callback, res: any, method: string){\n        if (this.component){ \n            var field = this.getWaitingStateField(method);\n            this.component.setState({ error: res.error || '', [field]: false });\n        }\n        else if (res.error) {\n            alert(JSON.stringify(res.error));\n        }\n        if (res.error){\n            return;\n        }\n        cb(res);\n    }\n    \n    create(item: any, cb: Callback) {\n        this.handleReq('POST', '', item, cb);\n    }\n    getAll(cb: Callback) {\n        this.handleReq('GET', '', null, cb);\n    }\n    get(id: string, cb: Callback) {\n        this.handleReq('GET', '/'+id, null, cb);\n    }\n    update(item: any, cb: Callback) {\n        this.handleReq('PUT', '/'+item._id, item, cb);\n    }\n    remove(item: any, cb: Callback) {\n        this.handleReq('DELETE', '/'+item._id, null, cb);\n    }\n} ","import BaseApiClient from './base';\n\nexport default class UsersApiClient extends BaseApiClient {\n    constructor(component) {\n        super('users', component);\n    }\n\n    register(login, password, cb) {\n        var ticket = {login, password};\n        this.handleReq('POST', '/register', ticket, cb);\n    }\n\n    login(login, password, cb) {\n        var ticket = {login, password};\n        this.handleReq('POST', '/login', ticket, cb);\n    }\n\n    logout(cb) {\n        this.handleReq('POST', '/logout', null, cb);\n    }\n} ","export default class LocalStorage {\n    static set(key, value) {\n        localStorage.setItem(key, value);\n    }\n\n    static get(key) {\n        return localStorage.getItem(key);\n    }\n} ","import LocalStorage from \"./LocalStorage\";\n    \nexport default class AuthUtils {\n    static isLoggedIn() {\n        var session = this.getSession();\n        return session && session.expireDate > new Date().toISOString();\n    }\n    \n    static getSession() {\n        return this.session || JSON.parse(LocalStorage.get('session'));\n    }\n    \n    static setSession(session) {\n        LocalStorage.set('session', JSON.stringify(session));\n        this.session = session;\n    }\n\n    static isAdmin() {\n        var session = this.getSession();\n        return this.isLoggedIn() && session.isAdmin;\n    }\n};","import React from \"react\";\n\nexport default class Landing extends React.Component {\n    render() {\n        return (\n            <h2>Lite and simple app</h2>\n        )\n    }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport './Registration.css';\nimport AuthUtils from '../../utils/AuthUtils';\nimport UsersApiClient from '../../api-clients/users';\nimport Button from '@material-ui/core/Button';\nimport { Session } from '../../types/index';\nimport { RouteComponentProps } from \"react-router-dom\";\n\nexport default class Registration extends React.Component<RouteComponentProps, {}> {\n    state = { redirectToReferrer: false, login: '', password: '', submitting: false, error: '' };\n  \n    register = (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (!this.state.login){\n        return this.setState({ error: 'login is empty' });\n      }\n      if (!this.state.password){\n        return this.setState({ error: 'password is empty' });\n      }\n      (new UsersApiClient(this)).register(this.state.login, this.state.password, (session: Session) => {\n        session.loggedAs = this.state.login;\n        AuthUtils.setSession(session);\n        this.setState({ redirectToReferrer: true });\n      });\n    };\n\n    onInputChange(field: string, e: React.ChangeEvent<HTMLInputElement>) {\n      this.setState({[field]: e.target.value});\n    }\n  \n    render() {\n      let { from } = this.props.location.state || { from: { pathname: \"/notes\" } };\n      let { redirectToReferrer } = this.state;\n  \n      if (redirectToReferrer) return <Redirect to={from} />;\n\n      return (\n        <form id=\"registerForm\">\n          <h2>Register a new account</h2>\n          <div className=\"fieldBlock\">\n            <label>Login:</label>\n            <input type=\"text\" name=\"login\" value={this.state.login} onChange={e => this.onInputChange('login', e)} />\n          </div>\n          <div className=\"fieldBlock\">\n            <label>Password:</label>\n            <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.onInputChange('password', e)} />\n          </div>\n          <Button variant=\"outlined\" type=\"submit\" id=\"submitRegisterForm\" onClick={e => this.register(e)} disabled={this.state.submitting}>\n            {this.state.submitting ? 'Registering...' : 'Register'}\n          </Button><br />\n          {this.state.error && <div className=\"alert error\" id=\"registerError\">{this.state.error}</div>}\n        </form>\n      );\n    }\n}","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport './Login.css';\nimport AuthUtils from '../../utils/AuthUtils';\nimport UsersApiClient from '../../api-clients/users';\nimport Button from '@material-ui/core/Button';\nimport { Session } from '../../types/index';\nimport { RouteComponentProps } from \"react-router-dom\";\n\nexport default class Login extends React.Component<RouteComponentProps, {}> {\n    state = { redirectToReferrer: false, login: '', password: '', submitting: false, error: '' };\n  \n    login = (e: React.MouseEvent) => {\n      e.preventDefault();\n      if (!this.state.login){\n        return this.setState({ error: 'login is empty' });\n      }\n      if (!this.state.password){\n        return this.setState({ error: 'password is empty' });\n      }\n      (new UsersApiClient(this)).login(this.state.login, this.state.password, (session: Session) => {\n        session.loggedAs = this.state.login;\n        AuthUtils.setSession(session);\n        this.setState({ redirectToReferrer: true });\n      });\n    };\n\n    onInputChange(field: string, e: React.ChangeEvent<HTMLInputElement>) {\n      this.setState({[field]: e.target.value});\n    }\n  \n    render() {\n      let { from } = this.props.location.state || { from: { pathname: \"/notes\" } };\n      let { redirectToReferrer } = this.state;\n  \n      if (redirectToReferrer) return <Redirect to={from} />;\n\n      var isLoginPage = this.props.location.pathname === '/login';\n      var isLoggedIn = AuthUtils.isLoggedIn();\n\n      return (\n        isLoggedIn ? (\n          'You are already logged in'\n        ) : (\n          <div>\n            {isLoginPage ? '' : <p>You must log in to view the page at {from.pathname}</p>}\n            <form id=\"loginForm\">\n              <h2>Log in to an existing account</h2>\n              <div className=\"fieldBlock\">\n                <label>Login:</label>\n                <input type=\"text\" name=\"login\" value={this.state.login} onChange={e => this.onInputChange('login', e)} />\n              </div>\n              <div className=\"fieldBlock\">\n                <label>Password:</label>\n                <input type=\"password\" name=\"password\" value={this.state.password} onChange={e => this.onInputChange('password', e)} />\n              </div>\n              <Button variant=\"outlined\" type=\"submit\" id=\"submitLoginForm\" onClick={e => this.login(e)} disabled={this.state.submitting}>\n                {this.state.submitting ? 'Logging in...' : 'Log in'}\n              </Button><br />\n              {this.state.error && <div className=\"alert error\" id=\"loginError\">{this.state.error}</div>}\n            </form>\n          </div>\n        )\n      );\n    }\n}","import BaseApiClient from './base';\n\nexport default class NotesApiClient extends BaseApiClient {\n    constructor(component) {\n        super('notes', component);\n    }\n    getPublic(id, cb) {\n        this.handleReq('GET', '/public/'+id, null, cb);\n    }\n} ","import BaseApiClient from './base';\n\nexport default class SettingsApiClient extends BaseApiClient {\n    constructor(component) {\n        super('settings', component);\n    }\n} ","export default class StringUtils {\n    static isContains(text, string){\n        return text.toLowerCase().includes(string.toLowerCase());\n    }\n} ","import React from 'react';\nimport Select from 'react-select'\nimport { FiltersValue, Tag, FiltersValueDiff } from '../../types/index';\nimport './Filters.css';\n\ninterface FiltersProps {\n    filters: FiltersValue;\n    tags: Tag[];\n    onFiltersChange: (filters: FiltersValueDiff) => void;\n}\n\nexport default class Filters extends React.Component<FiltersProps, {}> {\n  render(){\n    var filters = this.props.filters;\n    return (\n      <form id=\"Filters\">\n        <label>Filter</label>:{' '}\n        <span className=\"fieldInline\">\n          <label>by title & text</label>{' '}\n          <input type=\"text\" id=\"textFilter\" value={filters.text} onChange={e => this.props.onFiltersChange({text: e.target.value})} key=\"textFilter\" />\n        </span>\n        <span className=\"fieldInline\">\n          <label>by tags</label>{' '}\n          <Select id=\"tagsFilter\" value={filters.tags} isMulti options={this.props.tags} onChange={(v: any) => this.props.onFiltersChange({tags: v})}></Select>\n        </span>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport { SortValue, SortValueDiff, SortField, SortDirection } from '../../types/index';\nimport './Sort.css';\n\ninterface SortProps {\n    sort: SortValue;\n    onSortChange: (sort: SortValueDiff) => void;\n}\n\nexport default class Sort extends React.Component<SortProps, {}> {\n  render(){\n    var sort = this.props.sort;\n    var fields = [\n      {id: 'dateOfUpdate', name: 'date of update'}, \n      {id: 'dateOfCreate', name: 'date of create'}\n    ];\n    var fieldOptions = fields.map(o => <option key={o.id} value={o.id}>{o.name}</option>);\n    var directions = [ \n      {id: 'desc', name: 'descending'},\n      {id: 'asc', name: 'ascending'}\n    ];\n    var directionOptions = directions.map(o => <option key={o.id} value={o.id}>{o.name}</option>);\n    return (\n      <form id=\"Sort\">\n        <label>Sort</label>:{' '}\n        <span className=\"fieldInline\">\n          <label>by</label>{' '}\n          <select id=\"sortField\" value={sort.field} onChange={(e) => this.props.onSortChange({field: e.target.value as SortField})}>\n            {fieldOptions}\n          </select>{' '}\n          <label>in</label>{' '}\n          <select id=\"sortDirection\" value={sort.direction} onChange={(e) => this.props.onSortChange({direction: e.target.value as SortDirection})}>\n            {directionOptions}\n          </select>{' '}\n          <label>order</label>\n        </span>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport RichTextEditor from 'react-rte';\nimport { EditorValue } from \"react-rte\";\n\ninterface TextEditorProps {\n    value: string;\n    onChange: (value: string) => void;\n}\n\ninterface TextEditorState {\n    value: EditorValue;\n}\n\nexport default class TextEditor extends React.Component<TextEditorProps, TextEditorState> {\n  state = {\n    value: RichTextEditor.createValueFromString(this.props.value, 'html')\n  }\n\n  onChange = (value: EditorValue) => {\n    this.setState({value});\n    // Send the changes up to the parent component as an HTML string.\n    // This is here to demonstrate using `.toString()` but in a real app it\n    // would be better to avoid generating a string on each change.\n    this.props.onChange(\n      value.toString('html')\n    );\n  };\n\n  render () {\n    return (\n      <RichTextEditor\n        value={this.state.value}\n        onChange={this.onChange}\n      />\n    );\n  }\n}","import React from 'react';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport TextEditor from '../TextEditor/TextEditor';\nimport Creatable from 'react-select/creatable';\nimport Button from '@material-ui/core/Button';\nimport { Item, Tag, ItemDiff, Setting } from '../../types/index';\nimport './Form.css';\n\ninterface FormProps {\n    item: Item;\n    tags: Tag[];\n    sending: boolean;\n    changed: boolean;\n    onItemChange: (item: ItemDiff) => void;\n    onCreateTag: (tagName: string) => void;\n    onPublicLinkCopy: () => void;\n    onSubmit: (e: React.FormEvent<HTMLFormElement>) => void;\n    submitEnabled: Setting['notesFormManualSubmitEnabled'];\n}\n\nexport default class Form extends React.Component<FormProps, {}> {\n  titleInput!: HTMLInputElement | null;\n  publicLinkInput!: HTMLInputElement | null;\n\n  componentDidMount(){\n    this.titleInput && this.titleInput.focus();\n  }\n\n  copyPublicLink() {\n    if (this.publicLinkInput){\n      this.publicLinkInput.focus();\n      this.publicLinkInput.select();\n    }\n  \n    try {\n      document.execCommand('copy');\n      this.props.onPublicLinkCopy();\n    } catch (err) {\n      console.error('unable to copy', err);\n    }\n  }\n\n  render(){\n    var item = this.props.item;\n    /* \n    var accessLevelOptions = this.props.accessLevels.map(l => <option key={l.id} value={l.id}>{l.name}</option>);\n    var accessLevelSelect = <select id=\"accessLevel\" value={item.accessLevel} onChange={e => this.props.onItemChange({accessLevel: +e.target.value})}>\n      {accessLevelOptions}\n    </select> \n    */\n    var publicLink = window.location.origin + '/notes/public/' + item._id;\n    var publicLinkCont = <>\n      <input type=\"text\" id=\"publicLink\" value={publicLink} readOnly ref={i => this.publicLinkInput = i} />\n      <IconButton id=\"copyPublicLink\" title=\"Copy public link\" onClick={e => this.copyPublicLink()}><FileCopyIcon /></IconButton>\n    </>;\n    return (\n      <form id=\"Form\" onSubmit={this.props.onSubmit} key={item._id}>\n        <input type=\"hidden\" id=\"id\" value={item._id} readOnly />\n        <div className=\"fieldBlock\" id=\"titleAndPublicAccess\">\n          <input type=\"text\" id=\"title\" value={item.title} onChange={e => this.props.onItemChange({title: e.target.value})} autoFocus\n            ref={i => this.titleInput = i} />\n          <label htmlFor=\"publicAccess\">\n            <input type=\"checkbox\" id=\"publicAccess\" checked={item.publicAccess} onChange={e => this.props.onItemChange({publicAccess: e.target.checked})} />\n            Public access \n            {/* item.publicAccess ? 'for ' : '' */}\n          </label>{' '}\n          {item.publicAccess && publicLinkCont}\n          {/* item.publicAccess ? accessLevelSelect : null */}\n        </div>\n        <div className=\"fieldBlock\">\n          <TextEditor value={item.text} onChange={(value: string) => this.props.onItemChange({text: value})} />\n        </div>\n        <div className=\"fieldBlock\">\n          <Creatable id=\"tags\" isMulti options={this.props.tags} value={item.tags} onChange={(value: any) => this.props.onItemChange({tags: value})}\n            onCreateOption={this.props.onCreateTag}></Creatable>\n        </div>\n        {this.props.submitEnabled ? <div className=\"fieldBlock\">\n          <Button variant=\"outlined\" type=\"submit\" id=\"submit\" disabled={this.props.sending}>{this.props.sending ? 'Sending...' : 'Submit'}</Button>\n        </div> : null}\n        <span id=\"formState\">{this.props.sending ? 'Saving...' : (this.props.changed ? 'Changed' : (item._id ? 'Saved' : ''))}</span>\n      </form>\n    );\n  }\n}\n","export default class DateUtils {\n    static toStr(date) {\n        var dateStr = date instanceof Date ? date.toISOString() : date || '';\n        return dateStr.replace('T', ' ').substr(0, 19);\n    }\n} ","import React from 'react';\nimport DateUtils from '../../utils/DateUtils';\nimport { Link } from \"react-router-dom\";\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { Item } from '../../types/index';\nimport './List.css';\n\ninterface ListProps {\n    items: Item[];\n    item: Item | null | undefined;\n    loading: boolean;\n    onDeleteItem: (item: Item) => void;\n}\n\nexport default class List extends React.Component<ListProps, {}> {\n  constructor(props: ListProps) {\n    super(props);\n    this.onDelete = this.onDelete.bind(this);\n  }\n\n  onDelete(e: React.MouseEvent, item: Item){\n    e.stopPropagation(); \n    e.preventDefault();\n    this.props.onDeleteItem(item);\n  }\n\n  strip(html: string){\n    var doc = new DOMParser().parseFromString(html, 'text/html');\n    return doc.body.textContent || \"\";\n  }\n\n  buildNodes(){\n    var nodes = this.props.items.map(item => {\n      if (!item._id){\n        return null;\n      }\n      var opened = this.props.item && this.props.item._id === item._id ? 'opened' : '';\n      var tags = (item.tags || []).map(tag => <span className=\"tag\" data-id={tag.value} key={tag.value}>{tag.label}</span>);\n      var aside = (<div className=\"aside\">\n        <div className=\"aside-inner\">\n          <span className=\"dateOfCreate\" title=\"Date of create\">{DateUtils.toStr(item.dateOfCreate)}</span>\n          <span className=\"dateOfUpdate\" title=\"Date of update\">{DateUtils.toStr(item.dateOfUpdate)}</span>\n          <div className=\"tags\">{tags}</div>\n        </div>\n        <IconButton className=\"delete\" title=\"Delete note\" onClick={(e) => window.confirm('Delete this item?') && this.onDelete(e, item)}>\n          <DeleteIcon />\n        </IconButton>\n      </div>);\n      return (\n        <li key={item._id} className={opened}>\n          <Link to={'/notes/' + item._id}>\n            {aside}\n            <div className=\"title\">{item.title}</div>\n            <div className=\"text\">{this.strip(item.text)}</div>\n          </Link>\n        </li>\n      );\n    });\n    return nodes.length ? nodes : <li>No items found</li>;\n  }\n\n  render(){\n    return (\n      <ul id=\"List\">\n        {this.props.loading ? <li>Loading...</li> : this.buildNodes()}\n      </ul>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { amber, green } from '@material-ui/core/colors';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  success: {\n    backgroundColor: green[600],\n  },\n  error: {\n    backgroundColor: theme.palette.error.dark,\n  },\n  info: {\n    backgroundColor: theme.palette.primary.main,\n  },\n  warning: {\n    backgroundColor: amber[700],\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing(1),\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n}));\n\ninterface AlertProps {\n  className?: string;\n  message?: string;\n  onClose?: () => void;\n  variant: keyof typeof variantIcon;\n}\n\nfunction AlertContent(props: AlertProps) {\n  const classes = useStyles();\n  const { className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={clsx(classes[variant], className)}\n      aria-describedby=\"client-snackbar\"\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={clsx(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton key=\"close\" aria-label=\"Close\" color=\"inherit\" onClick={onClose}>\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nAlertContent.propTypes = {\n  className: PropTypes.string,\n  message: PropTypes.node,\n  onClose: PropTypes.func,\n  variant: PropTypes.oneOf(['success', 'warning', 'error', 'info']).isRequired,\n};\n\nexport default function Alert(props: AlertProps) {\n    const {variant, message, onClose} = props;\n    const [open, setOpen] = React.useState(true);\n  \n    function handleClose() {\n        setOpen(false);\n        onClose && onClose();\n    }\n\n    return (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={open}\n            autoHideDuration={2000}\n            onClose={handleClose}\n        >\n            <AlertContent\n                onClose={handleClose}\n                variant={variant}\n                message={message}\n            />\n        </Snackbar>\n    );\n}","import React from 'react';\nimport { Item } from '../../types/index';\nimport './ReadonlyNote.css';\n\ninterface ReadonlyNoteProps {\n    item: Item;\n}\n\nexport default class ReadonlyNote extends React.Component<ReadonlyNoteProps, {}> {\n    render(){\n        var item = this.props.item;\n        return (\n            <div id=\"ReadonlyNote\">\n                <h2 className=\"title\">{item.title}</h2>\n                <div className=\"text\" dangerouslySetInnerHTML={ {__html: item.text} }></div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport NotesApiClient from '../../api-clients/notes';\nimport SettingsApiClient from '../../api-clients/settings';\nimport StringUtils from '../../utils/StringUtils';\nimport Filters from '../../components/Filters/Filters';\nimport Sort from '../../components/Sort/Sort';\nimport Form from '../../components/Form/Form';\nimport List from '../../components/List/List';\nimport Alert from '../../components/Alert/Alert';\nimport ReadonlyNote from '../../components/ReadonlyNote/ReadonlyNote';\nimport DateUtils from '../../utils/DateUtils';\nimport AddIcon from '@material-ui/icons/AddCircle';\nimport { Item, FiltersValue, SortValue, ItemDiff, Tag, FiltersValueDiff, SortValueDiff, Setting } from '../../types/index';\nimport { RouteComponentProps } from \"react-router-dom\";\nimport './Notes.css';\n\ninterface AppProps extends RouteComponentProps {\n    match: {\n        params: {\n            id: string\n        }; \n        isExact: boolean; \n        path: string; \n        url: string;\n    };\n}\n\ninterface AppState {\n    item: Item | null | undefined;\n    items: Item[];\n    filters: FiltersValue;\n    sort: SortValue;\n    loading: boolean;\n    formChanged: boolean;\n    submitting: boolean;\n    error: string;\n    publicLinkCopied: boolean;\n    formManualSubmitEnabled: Setting['notesFormManualSubmitEnabled'];\n}\n\nexport default class Notes extends React.Component<AppProps, AppState> {\n  tags: Tag[]; // TODO: move to state\n  accessLevels: {id: number, name: string}[];\n  history: RouteComponentProps['history'];\n  stopListeningHistory: () => void;\n  notesApiClient: NotesApiClient;\n  autosaveTimeoutID: number;\n\n  constructor(props: AppProps) {\n    super(props);\n    var id = props.match.params.id;\n    var item = id === 'new' ? this.buildEmptyItem() : null;\n    this.state = {\n      item: item,\n      items: [],\n      filters: {text: '', tags: []},\n      sort: {field: 'dateOfUpdate', direction: 'desc'},\n      loading: false,\n      formChanged: false,\n      submitting: false,\n      error: '',\n      publicLinkCopied: false,\n      formManualSubmitEnabled: false\n    };\n    this.tags = [];\n    this.accessLevels = [{id: 1, name: 'viewing'}, {id: 2, name: 'editing'}];\n    this.history = props.history;\n    this.stopListeningHistory = this.history.listen(location => {\n      this.getItemByLocation(this.state.items);\n    });\n    this.notesApiClient = new NotesApiClient(this);\n    this.autosaveTimeoutID = 0;\n    this.onOpenNew = this.onOpenNew.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onDeleteItem = this.onDeleteItem.bind(this);\n    this.onFiltersChange = this.onFiltersChange.bind(this);\n    this.onSortChange = this.onSortChange.bind(this);\n    this.onCreateTag = this.onCreateTag.bind(this);\n    this.onItemChange = this.onItemChange.bind(this);\n    this.onItemChangePartially = this.onItemChangePartially.bind(this);\n    this.onPublicLinkCopy = this.onPublicLinkCopy.bind(this);\n  }\n  \n  getItemIDFromLocation(){\n    return window.location.pathname.split('notes/')[1];\n  }\n  \n  getPublicItemIDFromLocation(){\n    var id = this.getItemIDFromLocation() || '';\n    return id.split('public/')[1];\n  }\n\n  isPublicItemLocation(){\n    return !!this.getPublicItemIDFromLocation();\n  }\n\n  getItemByLocation(items: Item[]){\n    var cb = (item: Item | undefined) => this.setState({items: items, item: item});\n    var id = this.getItemIDFromLocation();\n    var item = id === 'new' ? this.buildEmptyItem() : items.find(i => i._id === id);\n    if (id && id !== 'new' && !item){\n      var publicID = this.getPublicItemIDFromLocation();\n      if (publicID){\n        this.notesApiClient.getPublic(publicID, (item: Item) => {\n          cb(item);\n        });\n      }\n      else {\n        this.setState({error: 'note with specified id not found'});\n      }\n    }\n    cb(item);\n  }\n\n  loadSettings(){\n    return new Promise((resolve, reject) => {\n      new SettingsApiClient().getAll((settings: Setting[]) => {\n        var setting = settings[0] || {};\n        this.setState({formManualSubmitEnabled: setting.notesFormManualSubmitEnabled});\n        resolve();\n      });\n    });\n  }\n\n  loadItems(){\n    return new Promise((resolve, reject) => {\n      this.notesApiClient.getAll((items: Item[]) => {\n        this.getItemByLocation(items);\n        resolve();\n      });\n    });\n  }\n\n  componentDidMount() {\n    if (this.isPublicItemLocation()){\n      this.getItemByLocation([]);\n      return;\n    }\n    Promise.all([this.loadSettings(), this.loadItems()]);\n  }\n\n  componentWillUnmount() {\n    this.stopListeningHistory();\n  }\n\n  buildEmptyItem(): Item {\n    return {_id: '', title: '', text: '', tags: [], dateOfCreate: new Date(), dateOfUpdate: new Date(), publicAccess: false};\n  }\n\n  onOpenNew(){\n    var emptyItem = this.buildEmptyItem();\n    this.setState({item: emptyItem});\n  }\n\n  onSubmit(e: React.FormEvent<HTMLFormElement> | null, item = this.state.item){\n    e && e.preventDefault();\n    if (!item || (!item.title && !item.text)){\n      return;\n    }\n    if (!item._id){\n      item.dateOfCreate = new Date();\n    }\n    item.dateOfUpdate = new Date();\n    if (item._id){\n      this.updateItem(item, i => this.onItemChange(i, false));\n    }\n    else {\n      this.createItem(item, i => this.onItemChange(i, true));\n    }\n  }\n\n  createItem(item: Item, cb: (i: Item) => void){\n    this.notesApiClient.create(item, cb);\n  }\n\n  updateItem(item: Item, cb: (i: Item) => void){\n    this.notesApiClient.update(item, cb);\n  }\n\n  // TODO: move to Utils\n  isObjectsEqual(obj1: any, obj2: any){\n    return JSON.stringify(obj1) === JSON.stringify(obj2);\n  }\n\n  isItemsDiffer(item1: Item, item2: AppState['item']){\n    if (!item2){\n      return true;\n    }\n    return item1.title !== item2.title || \n           item1.text !== item2.text || \n           item1.publicAccess !== item2.publicAccess || \n           // item1.accessLevel !== item2.accessLevel || \n           !this.isObjectsEqual(item1.tags, item2.tags);\n  }\n\n  onItemChange(item: Item, isNew?: boolean){\n    item = {...this.state.item, ...item};\n    var isChanged = this.isItemsDiffer(item, this.state.item);\n    var items = this.state.items;\n    if (!isNew){\n      items = items.filter(i => i._id !== item._id); // remove old version\n    }\n    items.push(item);\n    this.setState({items: items, item: item, formChanged: isChanged});\n    isNew && this.history.push('/notes/' + item._id);\n    if (isChanged && !this.state.submitting && !this.state.formManualSubmitEnabled){\n      window.clearTimeout(this.autosaveTimeoutID);\n      this.autosaveTimeoutID = window.setTimeout(() => {\n        this.onSubmit(null, item);\n      }, 1000);\n    }\n  }\n\n  onDeleteItem(item: Item){\n    var items = this.state.items;\n    items = items.filter(i => i._id !== item._id);\n    this.notesApiClient.remove(item, () => {\n      var openedItem = this.state.item && this.state.item._id === item._id ? null : this.state.item;\n      this.setState({items: items, item: openedItem});\n      this.history.push('/notes');\n    });\n  }\n\n  onFiltersChange(filters: FiltersValueDiff){\n    let newFilters = {...this.state.filters, ...filters};\n    this.setState({filters: newFilters});\n  }\n\n  onSortChange(sort: SortValueDiff){\n    let newSort = {...this.state.sort, ...sort};\n    this.setState({sort: newSort});\n  }\n\n  filter(items: Item[]){\n    return items.filter(i => {\n      // text\n      var text = this.state.filters.text;\n      var useTextFilter = !!text;\n      var matchByText = useTextFilter ? StringUtils.isContains(i.text, text) || StringUtils.isContains(i.title, text) : true;\n      // tags\n      var tags = this.state.filters.tags;\n      var filterTagIDs = tags ?   tags.map(t => t.value) : [];\n      var itemTagIDs = i.tags ? i.tags.map(t => t.value) : [];\n      var useTagsFilter = tags && !!tags.length;\n      var matchByTags = useTagsFilter ? itemTagIDs.some(itemTagID => filterTagIDs.includes(itemTagID)) : true;\n      // match\n      var useFilters = useTextFilter || useTagsFilter;\n      return useFilters && i._id \n        ? (\n          (useTextFilter ? matchByText : true) && \n          (useTagsFilter ? matchByTags : true)\n        )\n        : true;\n    });\n  }\n\n  sort(items: Item[]){\n    var field = this.state.sort.field;\n    var sign = this.state.sort.direction === 'asc' ? 1 : -1;\n    return items.sort((i1, i2) => {\n      var v1 = i1[field];\n      var v2 = i2[field];\n      if (field.includes('date')){\n        v1 = DateUtils.toStr(v1);\n        v2 = DateUtils.toStr(v2);\n      }\n      return v1 > v2 ? sign : (v1 < v2 ? -sign : 0);\n    })\n  }\n\n  // TODO: load from DB\n  buildTagList(){\n    return this.state.items.reduce((tags: Tag[], item) => tags.concat(item.tags || []), []);\n  }\n\n  onCreateTag(tagName: string) {\n    var maxID = Math.max.apply(Math, this.tags.map(t => t.value));\n    var newID = maxID < 0 ? 1 : maxID + 1;\n    var tag = { value: newID, label: tagName };\n    this.tags.push(tag);\n    var item: ItemDiff = {};\n    item.tags = this.state.item ? this.state.item.tags.slice() : [];\n    item.tags.push(tag);\n    this.onItemChangePartially(item);\n  }\n\n  onItemChangePartially(item: ItemDiff) {\n    this.onItemChange(item as Item);\n  }\n\n  onPublicLinkCopy(){\n    this.setState({publicLinkCopied: true});\n  }\n\n  render(){\n    if (this.state.item && this.isPublicItemLocation()){\n      return <ReadonlyNote item={this.state.item} />;\n    }\n    return (\n      <div id=\"Notes\">\n        <div>\n          <Link to={'/notes/new'} id=\"openNew\" onClick={this.onOpenNew}><AddIcon /> Open new</Link>\n          {this.state.error && <div className=\"alert error\" id=\"notesError\">{this.state.error}</div>}\n          {this.state.publicLinkCopied && <Alert variant=\"success\" message=\"Copied!\" onClose={() => this.setState({publicLinkCopied: false})} />}\n        </div>\n        {this.renderBody()}\n      </div>\n    );\n  }\n\n  filterAndSortItems(items: Item[]){\n    var filteredItems = this.filter(items);\n    var sortedItems = this.sort(filteredItems);\n    return sortedItems;\n  }\n\n  renderBody(){\n    var items = this.filterAndSortItems(this.state.items);\n    this.tags = this.buildTagList();\n\n    var form = null;\n    var item = this.state.item;\n    if (item){\n      form = <Form item={item} onSubmit={this.onSubmit} submitEnabled={this.state.formManualSubmitEnabled} tags={this.tags} \n        /* accessLevels={this.accessLevels} */\n        onCreateTag={this.onCreateTag} onItemChange={this.onItemChangePartially} onPublicLinkCopy={this.onPublicLinkCopy} \n        sending={this.state.submitting} changed={this.state.formChanged}></Form>;\n    }\n\n    return (\n      <div id=\"wrap\">\n        <div id=\"aside\">\n          <div id=\"filtersAndSortCont\">\n            <div id=\"filtersCont\">\n              <Filters filters={this.state.filters} onFiltersChange={this.onFiltersChange} tags={this.tags}></Filters>\n            </div>\n            <div id=\"sortCont\">\n              <Sort sort={this.state.sort} onSortChange={this.onSortChange}></Sort>\n            </div>\n          </div>\n          <div id=\"listCont\">\n            <List items={items} item={item} onDeleteItem={this.onDeleteItem} loading={this.state.loading}></List>\n          </div>\n        </div>\n        <div id=\"formCont\">\n          {form}\n        </div>\n      </div>\n    );\n  }\n}\n","import BaseApiClient from './base';\n\nexport default class SessionsApiClient extends BaseApiClient {\n    constructor(component) {\n        super('sessions', component);\n    }\n} ","import React from 'react';\nimport { CircularProgress, Table, TableHead, TableBody, TableRow, TableCell, IconButton } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport BlockIcon from '@material-ui/icons/Block';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport UsersApiClient from '../../api-clients/users';\nimport SessionsApiClient from '../../api-clients/sessions';\nimport DateUtils from '../../utils/DateUtils';\nimport _ from 'lodash';\nimport { User, Session } from '../../types/index';\nimport './Users.css';\n\ntype UsersPromises = [Promise<User[]>, Promise<Session[]>];\n\ninterface UsersState {\n    users: User[],\n    sessionsByUser: {[userID: string]: Session[]},\n    loading: boolean,\n    updatingUserID: string | null\n}\n\ntype UserAction = 'block' | 'unblock' | 'delete';\n\nfunction getUsersPromise(cmp: React.Component) {\n    return new Promise<User[]>((resolve, reject) => {\n        new UsersApiClient(cmp).getAll((users: User[]) => resolve(users));\n    });\n}\n\nfunction getSessionsPromise(cmp: React.Component) {\n    return new Promise<Session[]>((resolve, reject) => {\n        new SessionsApiClient(cmp).getAll((sessions: Session[]) => resolve(sessions));\n    });\n}\n\nexport default class Users extends React.Component<{}, UsersState> {\n    usersAPIClient: UsersApiClient;\n\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            users: [],\n            sessionsByUser: {},\n            loading: false,\n            updatingUserID: null\n        }\n        this.usersAPIClient = new UsersApiClient(this);\n    }\n\n    componentDidMount() {\n        var promises: UsersPromises = [getUsersPromise(this), getSessionsPromise(this)];\n        Promise.all(promises).then((result) => {\n            var users = result[0];\n            var sessionsByUser = _.groupBy(result[1], s => s.userID);\n            this.setState({users, sessionsByUser});\n        });\n    }\n\n    onControlClick(user: User, action: UserAction){\n        if (['block', 'unblock'].includes(action)){\n            this.setState({updatingUserID: user._id || ''});\n            user.blocked = action === 'block';\n            this.usersAPIClient.update(user, (user: User) => {\n                var users = this.state.users.filter(u => u._id !== user._id);\n                users.push(user);\n                this.setState({updatingUserID: null, users: users});\n            });\n        }\n        if (action === 'delete'){\n            if (!window.confirm('Delete this user?')){\n                return;\n            }\n            this.setState({updatingUserID: user._id || ''});\n            this.usersAPIClient.remove(user, () => {\n                var users = this.state.users.filter(u => u._id !== user._id);\n                this.setState({updatingUserID: null, users: users});\n            });\n        }\n    }\n    \n    renderActionBtn(user: User, action: UserAction, title: string, disabled: boolean, icon: React.ReactNode){\n        return ( \n            <IconButton onClick={e => this.onControlClick(user, action)} className={'actionBtn'} title={title} disabled={disabled}>\n                {icon}\n            </IconButton>\n        );\n    }\n    \n    renderActionBtns(user: User, disabled: boolean){\n        var blockBtn = this.renderActionBtn(user, 'block', 'Block', disabled, <BlockIcon />);\n        var unblockBtn = this.renderActionBtn(user, 'unblock', 'Unblock', disabled, <BlockIcon color=\"error\" />);\n        var deleteBtn = this.renderActionBtn(user, 'delete', 'Delete', disabled, <DeleteIcon />);\n        return (<>\n            {user.blocked ? unblockBtn : blockBtn}\n            {deleteBtn}\n        </>);\n    }\n\n    renderTableRow(user: User){\n        var userSessions = this.state.sessionsByUser[user._id || ''];\n        var activeSessions = userSessions.filter(s => s.active && s.expireDate > new Date().toISOString());\n        var disabled = user._id === this.state.updatingUserID;\n        return (\n            <TableRow key={user._id}>\n                <TableCell component=\"th\" scope=\"row\">{user.login}</TableCell>\n                <TableCell>{DateUtils.toStr(user.registrationDate)}</TableCell>\n                <TableCell>{userSessions.length}</TableCell>\n                <TableCell>{activeSessions.length ? <CheckIcon /> : null}</TableCell>\n                <TableCell>{user.isAdmin ? <CheckIcon /> : null}</TableCell>\n                <TableCell>{this.renderActionBtns(user, disabled)}</TableCell>\n            </TableRow>\n        );\n    }\n\n    render(){\n        var users = _.sortBy(this.state.users, u => u._id);\n        return this.state.loading ? <CircularProgress /> : (\n            <Table id=\"Users\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Login</TableCell>\n                        <TableCell>Registration date</TableCell>\n                        <TableCell>Sessions count</TableCell>\n                        <TableCell>Has active sessions</TableCell>\n                        <TableCell>Is admin</TableCell>\n                        <TableCell>Actions</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {users.map(u => this.renderTableRow(u))}\n                </TableBody>\n            </Table>\n        );\n    }\n}","import React from 'react';\nimport { CircularProgress, FormControl, FormLabel, FormGroup, FormControlLabel, Checkbox } from '@material-ui/core';\nimport SettingsApiClient from '../../api-clients/settings';\nimport { Setting } from '../../types/index';\nimport './Settings.css';\n\ninterface SettingsState {\n    setting: Setting,\n    loading: boolean,\n    submitting: boolean\n}\n\nexport default class Settings extends React.Component<{}, SettingsState> {\n    constructor(props: any) {\n        super(props);\n        this.state = {\n            setting: {},\n            loading: false,\n            submitting: false\n        };\n    }\n\n    componentDidMount() {\n        new SettingsApiClient(this).getAll((settings: Setting[]) => {\n            var setting = settings[0] || {};\n            this.setState({setting});\n        });\n    }\n\n    handleCheck(e: React.ChangeEvent<HTMLInputElement>) {\n        var setting = Object.assign(this.state.setting, {notesFormManualSubmitEnabled: e.target.checked});\n        new SettingsApiClient(this).update(setting, (setting: Setting) => {\n            this.setState({setting});\n        });\n    }\n\n    render(){\n        return this.state.loading ? <CircularProgress /> : (\n            <div id=\"Settings\">\n                <FormControl component=\"fieldset\">\n                    <FormLabel component=\"legend\">Notes</FormLabel>\n                    <FormGroup>\n                        <FormControlLabel\n                            label='Manual form submit' \n                            control={\n                                <Checkbox\n                                    onChange={e => this.handleCheck(e)}\n                                    checked={this.state.setting.notesFormManualSubmitEnabled || false}\n                                    disabled={this.state.submitting}\n                                />\n                            }\n                        />\n                    </FormGroup>\n                </FormControl>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Users from '../../components/Users/Users';\nimport Settings from '../../components/Settings/Settings';\nimport AuthUtils from '../../utils/AuthUtils';\nimport './Admin.css';\n\ninterface TabPanelProps {\n  children: React.ReactNode;\n  tabID: string;\n  activeTabID: string;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const { children, activeTabID, tabID } = props;\n    return activeTabID === tabID ? <>{children}</> : <></>;\n}\n\nexport default function Admin() {\n    const [currTabID, setCurrTabID] = React.useState('Users');\n\n    if (!AuthUtils.isAdmin()){\n        return 'This page needs admin session';\n    }\n\n    function handleChange(event: React.ChangeEvent<{}>, newTabID: string) {\n        setCurrTabID(newTabID);\n    }\n    \n    var tabComponents: {[key: string]: React.ReactNode} = {\n        'Users': <Users />, \n        'Settings': <Settings />\n    };\n    var tabIDs = Object.keys(tabComponents);\n    var tabs = tabIDs.map(tabID => <Tab label={tabID} value={tabID} key={tabID} />);\n    var tabPanels = tabIDs.map(tabID => <TabPanel activeTabID={currTabID} tabID={tabID} key={tabID}>\n        {tabComponents[tabID]}\n    </TabPanel>);\n    return (\n        <div id=\"Admin\">\n            <Tabs value={currTabID} onChange={handleChange}>{tabs}</Tabs>\n            {tabPanels}\n        </div>\n    );\n}","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect, NavLink, withRouter } from \"react-router-dom\";\nimport UsersApiClient from './api-clients/users';\nimport AuthUtils from './utils/AuthUtils';\nimport Landing from './pages/Landing/Landing';\nimport Registration from './pages/Registration/Registration';\nimport Login from './pages/Login/Login';\nimport Notes from './pages/Notes/Notes';\nimport Admin from './pages/Admin/Admin';\n\nfunction AdminRoute({ component: Component, ...rest }) {\n    return (\n        <Route {...rest} render={props =>\n            AuthUtils.isAdmin() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{ pathname: \"/\", state: { from: props.location } }} />\n            )\n        }/>\n    );\n}\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n    return (\n        <Route {...rest} render={props =>\n            AuthUtils.isLoggedIn() ? (\n                <Component {...props} />\n            ) : (\n                <Redirect to={{ pathname: \"/login\", state: { from: props.location } }} />\n            )\n        }/>\n    );\n}\n\nclass Head extends React.Component {\n    state = { submitting: false };\n\n    logout(e){\n        e.preventDefault();\n        (new UsersApiClient(this)).logout(() => {\n            AuthUtils.setSession(null);\n            this.props.history.push(\"/login\");\n        });\n    }\n\n    getNavLink(props){\n        var isNotLoggedIn = props.private && !AuthUtils.isLoggedIn();\n        var isNotAdmin = props.admin && !AuthUtils.isAdmin();\n        if (isNotLoggedIn || isNotAdmin){\n            return null;\n        }\n        return (\n            <NavLink to={props.to} exact={props.exact} onClick={props.onClick} key={props.to}>{props.label}</NavLink>\n        );\n    }\n    \n    getAuthState(){\n        var isLoggedIn = AuthUtils.isLoggedIn();\n        var loggedAs = <span id=\"loggedAsCont\" key=\"loggedAsCont\">\n            Logged in as <span id=\"loggedAs\">{isLoggedIn && AuthUtils.getSession().loggedAs}</span>\n        </span>;\n        var logoutLabel = this.state.submitting ? 'Logging out...' : 'Log out';\n        var logoutLink = this.getNavLink({label: logoutLabel, to: \"/logout\", onClick: e => this.logout(e)});\n        var loginLabel = 'Log in';\n        var loginLink = this.getNavLink({label: loginLabel, to: \"/login\"});\n        return isLoggedIn ? [loggedAs, logoutLink] : loginLink;\n    }\n\n    render(){\n        var navItems = [\n            {label: \"Home\", to: \"/\", exact: true},\n            {label: \"Register\", to: \"/register\"},\n            {label: \"Notes\", to: \"/notes\", private: true},\n            {label: \"Admin\", to: \"/admin\", admin: true},\n        ];\n        return (\n            <div id=\"head\">\n                <h1>ShortNote</h1>\n                <div id=\"nav\">\n                    {navItems.map(this.getNavLink)}\n                    {this.getAuthState()}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default class AppRouter extends React.Component {\n    render(){\n        var HeadWithRouter = withRouter(Head);\n        return (\n            <Router>\n                <HeadWithRouter />\n                <div id=\"body\">\n                  <Route path=\"/\" exact component={Landing} />\n                  <Route path=\"/register\" component={Registration} />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/notes/public/:id\" exact component={Notes} />\n                  <PrivateRoute path={[\"/notes\", \"/notes/:id\"]} exact component={Notes} />\n                  <AdminRoute path={[\"/admin\"]} exact component={Admin} />\n                </div>\n            </Router>\n        );\n    }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './AppRouter';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}